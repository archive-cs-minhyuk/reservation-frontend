{"version":3,"sources":["routes/Auth.module.css","routes/AuthRequest.module.css","fbase.js","routes/AuthRequest.js","routes/Profile.js","routes/Auth.js","routes/Home.js","components/AfterNavigation.js","components/Router.js","components/App.js","index.js"],"names":["module","exports","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","AuthRequest","useState","email","setEmail","password","setPassword","pwdCheck","setPwdCheck","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","alert","createUserWithEmailAndPassword","message","className","styles","authContainer","container","type","placeholder","required","Input","auth_button","Profile","history","useHistory","onClick","signOut","push","Auth","signInWithEmailAndPassword","onSocialClick","provider","GoogleAuthProvider","signInWithPopup","authInput","authSubmit","buttonContainer","google_button","Home","AfterNavigation","to","AppRouter","isLoggedIn","path","component","exact","from","App","init","setInit","setIsLoggedIn","useEffect","onAuthStateChanged","user","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8fde2da4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"authContainer\":\"Auth_authContainer__2DzY3\",\"container\":\"Auth_container__3-fWW\",\"authInput\":\"Auth_authInput__3a-WS\",\"authSubmit\":\"Auth_authSubmit__1wMgD\",\"buttonContainer\":\"Auth_buttonContainer__TvVWj\",\"auth_button\":\"Auth_auth_button__9tstP\",\"google_button\":\"Auth_google_button__egW3X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"authContainer\":\"AuthRequest_authContainer__HsBnV\",\"container\":\"AuthRequest_container__3keij\",\"Input\":\"AuthRequest_Input__1hhTV\",\"auth_button\":\"AuthRequest_auth_button__2WRbr\"};","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\"; //for log-in\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase; //for google login\r\n\r\nexport const authService = firebase.auth();\r\n","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport styles from \"./AuthRequest.module.css\";\r\n\r\nconst AuthRequest = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [pwdCheck, setPwdCheck] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    } else if (name === \"passwordCheck\") {\r\n      setPwdCheck(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (password !== pwdCheck) {\r\n      alert(\"비밀번호가 일치하지 않습니다.\");\r\n      return;\r\n    }\r\n    try {\r\n      await authService.createUserWithEmailAndPassword(email, password);\r\n    } catch (error) {\r\n      setError(error.message);\r\n      alert(error);\r\n    }\r\n  };\r\n  return (\r\n    <div className={styles.authContainer}>\r\n      <form onSubmit={onSubmit} className={styles.container}>\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"이메일을 입력하세요\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className={styles.Input}\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"비밀번호를 입력하세요\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className={styles.Input}\r\n        />\r\n        <input\r\n          name=\"passwordCheck\"\r\n          type=\"password\"\r\n          placeholder=\"비밀번호를 한 번 더 입력하세요\"\r\n          value={pwdCheck}\r\n          onChange={onChange}\r\n          className={styles.Input}\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"계정 생성하기\"\r\n          className={styles.auth_button}\r\n        />\r\n      </form>\r\n      <h4>{error}</h4>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthRequest;\r\n","import { authService } from \"fbase\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Profile = () => {\r\n  const history = useHistory();\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n  return (\r\n    <>\r\n      <button onClick={onLogOutClick}>Log Out</button>\r\n    </>\r\n  );\r\n};\r\nexport default Profile;\r\n","import { authService, firebaseInstance } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport styles from \"./Auth.module.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Auth = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const history = useHistory();\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      await authService.signInWithEmailAndPassword(email, password);\r\n    } catch (error) {\r\n      setError(error.message); //on screen: error message\r\n      alert(error);\r\n    }\r\n  };\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider; //if other than google, add else if\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    }\r\n    await authService.signInWithPopup(provider);\r\n  };\r\n  return (\r\n    <div className={styles.authContainer}>\r\n      <form onSubmit={onSubmit} className={styles.container}>\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"이메일을 입력하세요\"\r\n          required\r\n          className={styles.authInput}\r\n          value={email}\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"비밀번호를 입력하세요\"\r\n          required\r\n          className={styles.authInput}\r\n          value={password}\r\n          onChange={onChange}\r\n        />\r\n        <input type=\"submit\" value=\"로그인\" className={styles.authSubmit} />\r\n      </form>\r\n      <div className={styles.buttonContainer}>\r\n        <button\r\n          onClick={() => history.push(\"/authRequest\")}\r\n          className={styles.auth_button}\r\n        >\r\n          회원가입\r\n        </button>\r\n        <button\r\n          name=\"google\"\r\n          onClick={onSocialClick}\r\n          className={styles.google_button}\r\n        >\r\n          구글로 로그인\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;\r\n","import React from \"react\";\r\n\r\nconst Home = () => <span>Home</span>;\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst AfterNavigation = () => (\r\n  <nav>\r\n    <ul>\r\n      <li>\r\n        <Link to=\"/home\">Home</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/profile\">My Profile</Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\n\r\nexport default AfterNavigation;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport AuthRequest from \"routes/AuthRequest\";\r\nimport Profile from \"routes/Profile\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport AfterNavigation from \"./AfterNavigation\";\r\n\r\nconst AppRouter = ({ isLoggedIn }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <AfterNavigation />}\r\n      {isLoggedIn ? (\r\n        <Switch>\r\n          <Route path=\"/home\" component={Home} exact />\r\n          <Route path=\"/profile\" component={Profile} exact />\r\n          <Redirect from=\"*\" to=\"/home\" />\r\n        </Switch>\r\n      ) : (\r\n        <Switch>\r\n          <Route path=\"/login\" component={Auth} exact />\r\n          <Route path=\"/authRequest\" component={AuthRequest} exact />\r\n          <Redirect from=\"*\" to=\"/login\" />\r\n        </Switch>\r\n      )}\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoggedIn(true);\n      } else {\n        setIsLoggedIn(false);\n      }\n      setInit(true);\n    });\n  }, []);\n  return (\n    <>{init ? <AppRouter isLoggedIn={isLoggedIn} /> : \"Initializing...\"}</>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}