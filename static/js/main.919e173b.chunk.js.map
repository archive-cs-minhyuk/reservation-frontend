{"version":3,"sources":["routes/Auth.module.css","routes/AuthRequest.module.css","routes/ResetPassword.module.css","fbase.js","routes/AuthRequest.js","util.js","routes/Profile.js","routes/ResetPassword.js","routes/Auth.js","routes/Home.js","components/AfterNavigation.js","components/Router.js","components/App.js","index.js"],"names":["module","exports","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","firestore","AuthRequest","userObj","useState","email","setEmail","name","setName","password","setPassword","pwdCheck","setPwdCheck","phone","setPhone","setError","onChange","event","target","value","temp","number","replace","substr","console","log","length","inputPhoneNumber","onSubmit","a","preventDefault","alert","createUserWithEmailAndPassword","createdUser","user","updateProfile","displayName","photoURL","then","message","className","styles","authContainer","container","type","placeholder","required","Input","auth_button","Profile","history","useHistory","slice","metadata","creationTime","onClick","signOut","push","ResetPassword","sendPasswordResetEmail","catch","error","requir","authInput","authSubmit","Auth","signInWithEmailAndPassword","onSocialClick","provider","GoogleAuthProvider","signInWithPopup","google_button","buttonContainer","authrequest","forgotpassword","Home","AfterNavigation","to","AppRouter","isLoggedIn","path","component","exact","from","App","init","setInit","setIsLoggedIn","setUserObj","useEffect","onAuthStateChanged","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.919e173b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"authContainer\":\"Auth_authContainer__2DzY3\",\"container\":\"Auth_container__3-fWW\",\"authInput\":\"Auth_authInput__3a-WS\",\"authSubmit\":\"Auth_authSubmit__1wMgD\",\"buttonContainer\":\"Auth_buttonContainer__TvVWj\",\"google_button\":\"Auth_google_button__egW3X\",\"authrequest\":\"Auth_authrequest__iKQ7G\",\"forgotpassword\":\"Auth_forgotpassword__2062g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"authContainer\":\"AuthRequest_authContainer__HsBnV\",\"container\":\"AuthRequest_container__3keij\",\"Input\":\"AuthRequest_Input__1hhTV\",\"auth_button\":\"AuthRequest_auth_button__2WRbr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"authContainer\":\"ResetPassword_authContainer__38AhX\",\"container\":\"ResetPassword_container__3ja2K\",\"authInput\":\"ResetPassword_authInput__1iBDy\",\"authSubmit\":\"ResetPassword_authSubmit__1gdhM\"};","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\"; //for log-in\r\nimport \"firebase/firestore\"; //for user-info(일단)\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase; //for google login\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\n","import { authService, dbService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { inputPhoneNumber } from \"../util\";\r\nimport styles from \"./AuthRequest.module.css\";\r\n\r\nconst AuthRequest = ({ userObj }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [pwdCheck, setPwdCheck] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"username\") {\r\n      setName(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    } else if (name === \"passwordCheck\") {\r\n      setPwdCheck(value);\r\n    } else if (name === \"phone\") {\r\n      const temp = inputPhoneNumber(value);\r\n      setPhone(temp);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (password !== pwdCheck) {\r\n      alert(\"비밀번호가 일치하지 않습니다.\");\r\n      return;\r\n    }\r\n    let createdUser;\r\n    try {\r\n      createdUser = await authService.createUserWithEmailAndPassword(\r\n        email,\r\n        password\r\n      );\r\n      createdUser.user\r\n        .updateProfile({\r\n          displayName: name,\r\n          photoURL: phone,\r\n        })\r\n        .then(function () {\r\n          var displayName = createdUser.displayName;\r\n          var photoURL = createdUser.photoURL;\r\n        });\r\n    } catch (error) {\r\n      setError(error.message);\r\n      alert(error);\r\n    }\r\n  };\r\n  return (\r\n    <div className={styles.authContainer}>\r\n      <form onSubmit={onSubmit} className={styles.container}>\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"이메일을 입력하세요\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className={styles.Input}\r\n        />\r\n        <input\r\n          name=\"username\"\r\n          type=\"text\"\r\n          placeholder=\"이름을 입력하세요\"\r\n          required\r\n          value={name}\r\n          onChange={onChange}\r\n          className={styles.Input}\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"비밀번호를 입력하세요\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className={styles.Input}\r\n        />\r\n        <input\r\n          name=\"passwordCheck\"\r\n          type=\"password\"\r\n          placeholder=\"비밀번호를 한 번 더 입력하세요\"\r\n          value={pwdCheck}\r\n          onChange={onChange}\r\n          className={styles.Input}\r\n        />\r\n        <input\r\n          name=\"phone\"\r\n          type=\"tel\"\r\n          placeholder=\"전화번호를 입력하세요\"\r\n          value={phone}\r\n          onChange={onChange}\r\n          className={styles.Input}\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Create Account\"\r\n          className={styles.auth_button}\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthRequest;\r\n","export function inputPhoneNumber(value) {\r\n  var number = value.replace(/[^0-9]/g, \"\");\r\n  var phone = \"\";\r\n\r\n  if (number.substr(0, 2) === \"02\") {\r\n    console.log(\"HI\");\r\n    if (number.length < 4) {\r\n      return number;\r\n    } else if (number.length < 7) {\r\n      phone += number.substr(0, 2);\r\n      phone += \"-\";\r\n      phone += number.substr(2);\r\n    } else if (number.length < 9) {\r\n      phone += number.substr(0, 2);\r\n      phone += \"-\";\r\n      phone += number.substr(2, 4);\r\n      phone += \"-\";\r\n      phone += number.substr(6);\r\n    } else if (number.length < 10) {\r\n      phone += number.substr(0, 2);\r\n      phone += \"-\";\r\n      phone += number.substr(2, 3);\r\n      phone += \"-\";\r\n      phone += number.substr(5);\r\n    } else {\r\n      phone += number.substr(0, 2);\r\n      phone += \"-\";\r\n      phone += number.substr(2, 4);\r\n      phone += \"-\";\r\n      phone += number.substr(6, 4);\r\n    }\r\n  } else {\r\n    if (number.length < 4) {\r\n      return number;\r\n    } else if (number.length < 7) {\r\n      phone += number.substr(0, 3);\r\n      phone += \"-\";\r\n      phone += number.substr(3);\r\n    } else if (number.length < 11) {\r\n      phone += number.substr(0, 3);\r\n      phone += \"-\";\r\n      phone += number.substr(3, 3);\r\n      phone += \"-\";\r\n      phone += number.substr(6);\r\n    } else {\r\n      phone += number.substr(0, 3);\r\n      phone += \"-\";\r\n      phone += number.substr(3, 4);\r\n      phone += \"-\";\r\n      phone += number.substr(7, 4);\r\n    }\r\n  }\r\n  return phone;\r\n}\r\n","import { authService } from \"fbase\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Profile = ({ userObj }) => {\r\n  const history = useHistory();\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n  const phoneNumber = () => {\r\n    if (userObj.photoURL.slice(0, 3) !== \"010\") {\r\n      //google 로그인 거르기 위한 방법... 나중에 안되면 고칠것\r\n      return \"-\";\r\n    } else {\r\n      return userObj.photoURL;\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <ul>\r\n        <li>\r\n          <h5>이메일</h5>\r\n          <span>{userObj.email}</span>\r\n        </li>\r\n        <li>\r\n          <h5>이름</h5>\r\n          <span>{userObj.displayName}</span>\r\n        </li>\r\n        <li>\r\n          <h5>연락처</h5>\r\n          <span>{phoneNumber()}</span>\r\n        </li>\r\n        <li>\r\n          <h5>가입 일자</h5>\r\n          <span>{userObj.metadata.creationTime.slice(0, 17)}</span>\r\n        </li>\r\n      </ul>\r\n      <button onClick={onLogOutClick}>Log Out</button>\r\n    </>\r\n  );\r\n};\r\nexport default Profile;\r\n","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport styles from \"./ResetPassword.module.css\";\r\n\r\nconst ResetPassword = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (email !== \"\") {\r\n      await authService\r\n        .sendPasswordResetEmail(email)\r\n        .then(function () {\r\n          console.log(\"비밀번호 reset\");\r\n        })\r\n        .catch(function (error) {\r\n          alert(error.message);\r\n        });\r\n    } else {\r\n      alert(\"이메일을 다시 입력해주세요.\");\r\n    }\r\n  };\r\n  return (\r\n    <div className={styles.authContainer}>\r\n      <form onSubmit={onSubmit} className={styles.container}>\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"이메일을 입력하세요\"\r\n          requir\r\n          value={email}\r\n          onChange={onChange}\r\n          className={styles.authInput}\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"비밀번호 재설정 메일 보내기\"\r\n          className={styles.authSubmit}\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default ResetPassword;\r\n","import { authService, firebaseInstance } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport styles from \"./Auth.module.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Auth = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const history = useHistory();\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      await authService.signInWithEmailAndPassword(email, password);\r\n    } catch (error) {\r\n      setError(error.message); //on screen: error message\r\n      alert(error);\r\n    }\r\n  };\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider; //if other than google, add else if\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    }\r\n    await authService.signInWithPopup(provider);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.authContainer}>\r\n      <form onSubmit={onSubmit} className={styles.container}>\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"E-mail\"\r\n          required\r\n          className={styles.authInput}\r\n          value={email}\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"password\"\r\n          required\r\n          className={styles.authInput}\r\n          value={password}\r\n          onChange={onChange}\r\n        />\r\n        <input type=\"submit\" value=\"Sign In\" className={styles.authSubmit} />\r\n        <button\r\n          name=\"google\"\r\n          onClick={onSocialClick}\r\n          className={styles.google_button}\r\n        >\r\n          Sign In by Google\r\n        </button>\r\n      </form>\r\n      <div className={styles.buttonContainer}>\r\n        <div\r\n          onClick={() => history.push(\"/authRequest\")}\r\n          className={styles.authrequest}\r\n        >\r\n          Create Account\r\n        </div>\r\n        <div\r\n          onClick={() => history.push(\"/resetPassword\")}\r\n          className={styles.forgotpassword}\r\n        >\r\n          Forgot your password?\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;\r\n","import React from \"react\";\r\n\r\nconst Home = () => <span>Home</span>;\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst AfterNavigation = () => (\r\n  <nav>\r\n    <ul>\r\n      <li>\r\n        <Link to=\"/home\">Home</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/profile\">My Profile</Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\n\r\nexport default AfterNavigation;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport AuthRequest from \"routes/AuthRequest\";\r\nimport Profile from \"routes/Profile\";\r\nimport ResetPassword from \"routes/ResetPassword\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport AfterNavigation from \"./AfterNavigation\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <AfterNavigation />}\r\n      {isLoggedIn ? (\r\n        <Switch>\r\n          <Route path=\"/home\" component={Home} exact />\r\n          <Route\r\n            path=\"/profile\"\r\n            component={() => <Profile userObj={userObj} />}\r\n            exact\r\n          />\r\n          <Redirect from=\"*\" to=\"/home\" />\r\n        </Switch>\r\n      ) : (\r\n        <Switch>\r\n          <Route path=\"/login\" component={Auth} exact />\r\n          <Route\r\n            path=\"/authRequest\"\r\n            component={() => <AuthRequest userObj={userObj} />}\r\n            exact\r\n          />\r\n          <Route\r\n            path=\"/resetPassword\"\r\n            component={() => <ResetPassword />}\r\n            exact\r\n          />\r\n          <Redirect from=\"*\" to=\"/login\" />\r\n        </Switch>\r\n      )}\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null); //나중에 사용 가능하도록 현재 유저 정보 저장\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        console.log(user);\n        setIsLoggedIn(true);\n        setUserObj(user);\n      } else {\n        setIsLoggedIn(false);\n      }\n      setInit(true);\n    });\n  }, []);\n  return (\n    <>\n      {init ? (\n        <AppRouter isLoggedIn={isLoggedIn} userObj={userObj} />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}